import Head from 'next/head'

import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import Shoeslist from '@/components/shoeslist'
import Link from 'next/link';
import Layout from '@/components/layout'
import Mainshoe from '@/components/mainshoe'
import { limitToFirst, orderByChild, ref, query, get, getDatabase } from 'firebase/database';
import { initializeApp } from "firebase/app";

const inter = Inter({ subsets: ['latin'] })

function Home({items}) {
  const main = items[0][1];
  const others = [];
  items.forEach(element => {
    if(element[1] != main)
    {
      others.push(element[1]);
    }
  });
  return (
    <>
      <Head>
        <title>Nextjs E-Website</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        <Mainshoe shoe = {main} />
      </Layout>
    </>
  )
}
Home.getInitialProps = async (context) => {
  const firebaseConfig = {
    apiKey: "AIzaSyCGIARWqNieo45Bkni9THq4duor3JwcpQU",
    authDomain: "nextjs-e-website.firebaseapp.com",
    databaseURL: "https://nextjs-e-website-default-rtdb.europe-west1.firebasedatabase.app",
    projectId: "nextjs-e-website",
    storageBucket: "nextjs-e-website.appspot.com",
    messagingSenderId: "218373834438",
    appId: "1:218373834438:web:c98f0e1f0c63c32985f9c7",
    measurementId: "G-P35WYNB4PN"
  };
  // const firebaseConfig = {
  //   apiKey: process.env.API_KEY,
  //   authDomain: process.env.AUTH_DOMAIN,
  //   databaseURL: process.env.DB_URL,
  //   projectId: process.env.PROJECT_ID,
  //   storageBucket: process.env.STORAGE_BUCKET,
  //   messagingSenderId: process.env.MESSAGING_SENDER_ID,
  //   appId: process.env.APP_ID,
  //   measurementId: process.env.MEASUREMENT_ID,
  //   };
  const app = initializeApp(firebaseConfig);
  let item = {};
  const db = getDatabase(app);
  return get(query(ref(db, 'shoes'), orderByChild('name'), limitToFirst(5)))
  .then(snapshot => {
      item =Object.entries(snapshot.val());
      
      return {
          items:item
      }
  })
}
export default Home;
